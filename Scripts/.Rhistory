wald.test(b = coef(Rearing_logit), Sigma = vcov(Rearing_logit), Terms = 2:3)
#The chi-squared test statistic of 10.0 with 2 degrees of freedom is associated with a p-value of 0.0067 indicating that the overall effect of treatment is statistically significant.
#Interpret as odds-ratios with 95% CI
#odds ratios and 95% CI:
exp(cbind(OR = coef(Rearing_logit), confint(Rearing_logit)))
#For one unit increase in Eelgrass the odds of survival increased by a factor of 0.85 while for a one unit increase in Fucus the odds of survival increase by a factor of 25.9
####Growth Rate Plot####
Growth_plot <- ggplot(Growth, aes(x = Treatment, y = Growth_Rate, fill = Treatment)) +
geom_boxplot(fill = c("gray21", "chartreuse4", "tan4")) +
ggtitle("Growth Rate by Rearing Treatment") +
labs(x = "Food Source",
y = bquote('Growth Rate'~(mm^2/day)),
size = 14) +
theme(plot.title = element_text(hjust = 0.5,
family = "Times",
color = "#000000",
face = "bold",
size = 20)) +
theme(axis.title = element_text(family = "Times", color = "#000000", size = 16)) +
theme_classic()
####Survivorship Plot####
Rear2 <- Rearing_Survival %>%
group_by(Food) %>%
mutate(avg = mean(Survival)) %>%
mutate(stde = (sd(Survival) / sqrt(length(Survival))))
#Find the averages
Rear_sum <- Rear2 %>%
group_by(Food) %>%
summarise(rear_surv = (sum(Survival/length(Survival))),
stde = mean(stde)) %>%
ungroup()
#Graph with standard errors
RearPlot <- ggplot(data = Rear_sum,
mapping = aes(x = Food, y = rear_surv, fill = Food)) +
geom_col(fill = c("gray21", "chartreuse4", "tan4")) +
geom_errorbar(aes(ymin = rear_surv - stde, ymax = rear_surv + stde),
width = 0.1) +
ggtitle("Rearing Survivorship") +
labs(x = "Food Source",
y = "Proportion Surviving",
size = 15) +
theme(plot.title = element_text(hjust = 0.5,
family = "Times",
color = "#000000",
face = "bold",
size = 20)) +
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_classic()
RearPlot
Growth_plot
#Logistic Regression for each Habitat
Seagrass <- read_csv("../Data/Seagrass_Tether.csv")
Seagrass$Isopod_Color <- factor(Seagrass$Isopod_Color)
Fucus <- read_csv("../Data/Fucus_Tether.csv")
Fucus$Color <- factor(Fucus$Color)
#Quick look at contingency table with outcomes
xtabs(~`Survivorship Eelgrass` + Isopod_Color, data = Seagrass)
xtabs(~Survivorship + Color, data = Fucus)
#We have count data again so a binomial logistic regression is appropriate.
####Seagrass####
####Test it####
eelgrass_logit <- glm(`Survivorship Eelgrass` ~ Isopod_Color + `Size Eelgrass`, data = Seagrass, family = "binomial")
summary(eelgrass_logit)
Anova(eelgrass_logit)
#Color is significant but size is not.
####Assumptions####
#Simulate residuals to see if the model is working well
EelgrassOutput <- simulateResiduals(fittedModel = eelgrass_logit, n = 250)
plotSimulatedResiduals(EelgrassOutput)
#Goodness-of-fit test:
testUniformity(simulationOutput = EelgrassOutput)
#Test for zero inflation
testZeroInflation(EelgrassOutput)
#Looks good
####Post-Hoc Comparisons####
eelgrass_em <- emmeans(eelgrass_logit, ~Isopod_Color)
eelgrass_tukey <- emmeans::contrast(eelgrass_em,
method = "tukey")
####Fucus####
####Test it####
fucus_logit <- glm(Survivorship ~ Color, data = Fucus,
family = "binomial")
summary(fucus_logit)
Anova(fucus_logit)
####Assumptions####
FucusOutput <- simulateResiduals(fittedModel = fucus_logit, n = 250)
plotSimulatedResiduals(FucusOutput)
#Goodness-of-fit test:
testUniformity(simulationOutput = FucusOutput)
#Test for zero inflation
testZeroInflation(FucusOutput)
#Looks good
####Post Hoc Comparisons####
#Find emmeans and standard error for each interaction
fucus_em <- emmeans(fucus_logit, ~Color)
fucus_tukey <- emmeans::contrast(fucus_em,
method = "tukey")
Tether <- read_csv("../Data/Tether.csv") %>%
group_by(Habitat, Color) %>%
mutate(avg = mean(Survivorship)) %>%
mutate(stde = (sd(Survivorship)/sqrt(length(Survivorship))))
tether_sum <- Tether %>%
group_by(Habitat, Color) %>%
summarise(size_surv = (sum(Survivorship/length(Survivorship))),
stde = mean(stde)) %>%
ungroup()
TetherPlot <- ggplot(data = tether_sum,
mapping = aes(x = Color, y = size_surv, fill = Color)) +
geom_col(fill = c("tan4", "chartreuse4", "tan4", "chartreuse4")) +
geom_errorbar(aes(ymin = size_surv - stde, ymax = size_surv + stde),
width = 0.1, color = "gray22") +
facet_wrap(~Habitat) +
ggtitle("Tether Trial") +
labs(x = "Isopod Color",
y = "Proportion Surviving") +
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5)) +
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16))
TetherPlot
#Mixed Trials
Trials <- read_csv("../Data/Artificial_Habitat.csv")
#Same Habitat Trials (mine)
First_Trials <- read_csv("../Data/First_Habitat_Trials.csv")
#Trials with One Color
Trial2_field_match <- read_csv("../Data/Artificial_Same_Color_Mixed_Habitat.csv")
#Create Data for Trials with same color mixed habitat
#mutate all proportions to make then (0>1)
###Randall's Trials####
Trials <- Trials %>%
mutate(BASU_new = case_when(.$BASU_prop == 0 ~ "0.005",
.$BASU_prop == 1 ~ "0.995",
TRUE ~ as.character(BASU_prop))) %>%
mutate(BASU_new = as.numeric(.$BASU_new)) %>%
mutate(BAFU_new = case_when(.$BAFU_prop == 0 ~ "0.005",
.$BAFU_prop == 1 ~ "0.995",
TRUE ~ as.character(BAFU_prop))) %>%
mutate(BAFU_new = as.numeric(.$BAFU_new))%>%
mutate(GASU_new = case_when(.$GASU_prop == 0 ~ "0.005",
.$GASU_prop == 1 ~ "0.995",
TRUE ~ as.character(GASU_prop))) %>%
mutate(GASU_new = as.numeric(.$GASU_new)) %>%
mutate(GAFU_new = case_when(.$GAFU_prop == 0 ~ "0.005",
.$GAFU_prop == 1 ~ "0.995",
TRUE ~ as.character(GAFU_prop))) %>%
mutate(GAFU_new = as.numeric(.$GAFU_new))
str(Trials)
####My Trials####
First_Trials <- First_Trials %>%
mutate(In_Brown_new = case_when(.$In_Brown == 0 ~ "0.005",
.$In_Brown == 1 ~ "0.995",
TRUE ~ as.character(In_Brown))) %>%
mutate(In_Brown_new = as.numeric(.$In_Brown_new)) %>%
mutate(In_Green_new = case_when(.$In_Green == 0 ~ "0.005",
.$In_Green == 1 ~ "0.995",
TRUE ~ as.character(In_Green))) %>%
mutate(In_Green_new = as.numeric(.$In_Green_new))%>%
mutate(Swimming_new = case_when(.$Swimming == 0 ~ "0.005",
.$Swimming == 1 ~ "0.995",
TRUE ~ as.character(Swimming))) %>%
mutate(Swimming_new = as.numeric(.$Swimming_new)) %>%
mutate(Other_new = case_when(.$Other == 0 ~ "0.005",
.$Other == 1 ~ "0.995",
TRUE ~ as.character(Other))) %>%
mutate(Other_new = as.numeric(.$Other_new))
#Initial Visualizations
ggplot(Trials,
aes(x = Trial_Type, y = BAFU_new, fill = Field_Habitat)) +
geom_col() +
facet_wrap(~Isopod_Color) # This is interesting
ggplot(Trials,
aes(x = Trial_Type, y = BASU_new, fill = Isopod_Color)) +
geom_boxplot()
ggplot(Trials,
aes(x = Trial_Type, y = BAFU_new, fill = Field_Habitat)) +
geom_boxplot()
ggplot(Trials,
aes(x = Trial_Type, y = BASU_new, fill = Field_Habitat)) +
geom_boxplot()
#Select out the trials that do not have BAFU
#Now let's look using beta regression
#Not all potential levels of field habitat were represented in
#each trial so I removed that variable here.
#Create data for trials
Trial1 <- Trials %>%
group_by(Trial_Type) %>%
filter(Trial_Type %in% c("BASU/BAFU", "GASU/BAFU"))
Trial2_Brown<- Trials %>%
group_by(Trial_Type) %>%
filter(Trial_Type == "BASU/BAFU")
ggplot(Trial2_Brown,
aes(x = Field_Habitat, y = BAFU_new)) +
geom_col()
Trial2_Green <- Trials %>%
group_by(Trial_Type) %>%
filter(Trial_Type == "GASU/GAFU")
ggplot(Trial2_Green,
aes(x = Field_Habitat, y = GAFU_new)) +
geom_col()
Trial3<- Trials %>%
group_by(Trial_Type) %>%
filter(Trial_Type %in% c("BASU/BAFU","BASU/GAFU"))
Trial4<- Trials %>%
group_by(Trial_Type) %>%
filter(Trial_Type %in% c("GASU/BAFU","GASU/GAFU"))
Trial5<- Trials %>%
group_by(Trial_Type) %>%
filter(Trial_Type %in% c("GASU/BAFU","BASU/GAFU"))
Trial6<- Trials %>%
group_by(Trial_Type) %>%
filter(Trial_Type %in% c("GASU/GAFU","BASU/GAFU"))
####Do ANOVAs on all of these to get the summary stats!)####
Trial1_beta <- betareg(BAFU_new ~ Isopod_Color * Trial_Type + Date_of_Collection,
data = Trial1)
summary(Trial1_beta)
plot(Trial1_beta, which = 4)
cld(emmeans(Trial1_beta, ~ Isopod_Color))
cld(emmeans(Trial1_beta, ~Trial_Type))
Trial3_beta <- betareg(BASU_new ~ Isopod_Color * Trial_Type + Date_of_Collection,
data = Trial3)
plot(Trial3_beta, which = 4)
cld(emmeans(Trial3_beta, ~ Isopod_Color))
cld(emmeans(Trial3_beta, ~Trial_Type))
Trial4_beta <- betareg(GASU_new ~ Isopod_Color * Trial_Type + Date_of_Collection,
data = Trial4)
plot(Trial4_beta, which = 4)
cld(emmeans(Trial4_beta, ~ Isopod_Color))
cld(emmeans(Trial4_beta, ~Trial_Type))
Trial6_beta <- betareg(GAFU_new ~ Isopod_Color * Trial_Type + Date_of_Collection,
data = Trial6)
plot(Trial6_beta, which = 4)
cld(emmeans(Trial6_beta, ~ Isopod_Color))
cld(emmeans(Trial6_beta, ~Trial_Type))
First_Trials <- read_csv("../Data/First_Habitat_Trials.csv")
#Can try a beta regression with the same manipulation of the data
First_Trials <- First_Trials %>%
mutate(In_Brown_new = case_when(.$In_Brown == 0 ~ "0.005",
.$In_Brown == 1 ~ "0.995",
TRUE ~ as.character(In_Brown))) %>%
mutate(In_Brown_new = as.numeric(.$In_Brown_new)) %>%
mutate(In_Green_new = case_when(.$In_Green == 0 ~ "0.005",
.$In_Green == 1 ~ "0.995",
TRUE ~ as.character(In_Green))) %>%
mutate(In_Green_new = as.numeric(.$In_Green_new))%>%
mutate(Swimming_new = case_when(.$Swimming == 0 ~ "0.005",
.$Swimming == 1 ~ "0.995",
TRUE ~ as.character(Swimming))) %>%
mutate(Swimming_new = as.numeric(.$Swimming_new)) %>%
mutate(Other_new = case_when(.$Other == 0 ~ "0.005",
.$Other == 1 ~ "0.995",
TRUE ~ as.character(Other))) %>%
mutate(Other_new = as.numeric(.$Other_new))
#Seperate beta regressions for each possible location
brown_beta <- betareg(In_Brown_new ~ Isopod_Color * Trial_Type,
data = First_Trials)
Anova(brown_beta)
plot(brown_beta, which = 4)
cld(emmeans(brown_beta, ~Isopod_Color|Trial_Type))
#Beta regression on time spent in green habitat
green_beta <- betareg(In_Green_new ~ Isopod_Color * Trial_Type,
data = First_Trials)
plot(green_beta, which = 4)
Anova(green_beta)
cld(emmeans(green_beta, ~Isopod_Color|Trial_Type))
#Beta regression on time spent swimming
swimming_beta <- betareg(Swimming_new ~ Isopod_Color * Trial_Type,
data = First_Trials)
plot(swimming_beta, which = 4)
Anova(swimming_beta)
cld(emmeans(swimming_beta, ~Isopod_Color|Trial_Type))
#Beta regression on time spent in other
other_beta <- betareg(Other_new ~ Isopod_Color * Trial_Type,
data = First_Trials)
plot(other_beta, which = 4)
Anova(other_beta)
cld(emmeans(other_beta, ~Isopod_Color|Trial_Type))
First_Trial_Beta <- read_csv("../Data/Beta_Results_First.csv")
cld(emmeans(Trial3_beta, ~ Isopod_Color|Trial_Type))
First_Trial_Beta <- read_csv("../Data/Beta_Results_First.csv")
First_Trial_Means <- read_csv("../Data/First_Trial_Means.csv")
Mixed_Beta_Results <- read_csv("../Data/Beta_Results_Mixed copy.csv")
Mixed_Means <- read_csv("../Data/Beta_Means_Mixed.csv")
#Quick analysis of count data for field habitat by month
month_lm <- lm(Habitat ~ Month)
#Quick analysis of count data for field habitat by month
month_lm <- lm(Habitat ~ Month, data = Survey)
Survey_no_outlier <- Survey[-368,]
Survey_Final <- Survey_no_outlier %>%
mutate(Month = fct_relevel(Survey_no_outlier$Month,
"May", "June", "July", "August"))
Survey_Final <- Survey_Final %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
#Quick analysis of count data for field habitat by month
month_lm <- lm(Habitat ~ Month, data = Survey_Final)
month_lm
#Quick analysis of count data for field habitat by month
month_lm <- lm(Month ~ Habitat, data = Survey_Final)
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
na.strings = c("", "NA")
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
na.strings = c("", "NA")
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
mutat(Habitat = recode(Habitat, Seagrass = "1",
Fucus = "0"))
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
mutate(Habitat = recode(Habitat, Seagrass = "1",
Fucus = "0"))
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
mutate(Habitat = recode(Survey_Final, Seagrass = "1",
Fucus = "0"))
Survey_Final
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
mutate(Habitat = recode(Survey_Final$Habitat, Seagrass = "1",
Fucus = "0"))
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
mutate(Survey_Final$Habitat = recode(Survey_Final$Habitat, Seagrass = "1", Fucus = "0"))
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
mutate(Habitat = recode(Survey_Final$Habitat, Seagrass = "1", Fucus = "0"))
#Quick analysis of count data for field habitat by month
Season_Survey <- Survey_Final%>%
mutate(Habitat = recode(Habitat, Seagrass = "1", Fucus = "0"))
Survey_Final
####Habitat by Month####
Survey_Season <- Survey_Final %>%
group_by(Habitat, Month) %>%
mutate(Habitat = recode(Habitat, Seagrass = "1", Fucus = "0"))
####Habitat by Month####
Survey_Season <- Survey_Final %>%
group_by(Month) %>%
mutate(Habitat = recode(Habitat, Seagrass = "1", Fucus = "0"))
Survey_Season
Survey_Final
####Habitat by Month####
Survey_Season <- Survey_Final %>%
select("1":"5")
####Habitat by Month####
Survey_Season <- Survey_Final %>%
select("Habitat":"Month")
Survey_Season
####Habitat by Month####
Survey_Season <- Survey_Final %>%
select(c("Habitat","Month"))
Survey_Season
Survey_Season %>%
mutate(Habitat = recode(Habitat, Seagrass = "1", Fucus = "0"))
Survey_Season %>%
mutate(Habitat = recode(Seagrass = "1", Fucus = "0"))
Survey_Season %>%
mutate(Habitat = recode(Survey_Season$Habitat, Seagrass = "1", Fucus = "0"))
Survey <- read_csv("../Data/Field_Survey.csv")
str(Survey)
head(Survey)
#The following is the data transformation:
#Restrict isopod size for outliers that were inherently very small or very large (not representative of this sample population with not enough others in similar size range)
Survey <- Survey %>%
filter(Area < 1.5) %>%
filter(Area > 0.05)
#Check the data
Survey %>%
group_by(Habitat, Sex, Month) %>%
tally
Season_Binomial <- glm(Habitat ~ Month, data = Survey,
family = "binomial")
Season_Binomial <- glm(Binomial_Habitat ~ Month, data = Survey,
family = "binomial")
#Test Assumptions
SeasonalOutput <- simulateResiduals(fittedModel = Season_Binomial, n = 500)
plotSimulatedResiduals(simulationOutput = SeasonalOutput)
testUniformity(simulationOutput)
testUniformity(simulationOutput = SeasonalOutput)
testZeroInflation(SeasonalOutput)
#Anova
Anova(Season_Binomial)
#Coefficients and Odds Ratio
exp(coef(Season_Binomial))
Season_em <- contrast(emmeans(Season_Binomial, ~Month), method = "tukey", adjust = "none")
Season_em
#Check the data
Survey %>%
group_by(Habitat, Month) %>%
tally
Season_em <- contrast(emmeans(Season_Binomial, ~Month|Habitat), method = "tukey", adjust = "none")
Season_em <- contrast(emmeans(Season_Binomial, ~Month|Habitat_Binomial), method = "tukey", adjust = "none")
Season_em <- contrast(emmeans(Season_Binomial, ~Month|Binomial_Habitat), method = "tukey", adjust = "none")
Season_em <- contrast(emmeans(Season_Binomial, ~Binomial_Habitat|Month), method = "tukey", adjust = "none")
Season_em <- contrast(emmeans(Season_Binomial, |Month), method = "tukey", adjust = "none")
Season_em <- contrast(emmeans(Season_Binomial, ~Month), method = "tukey", adjust = "none")
Season_em
Season_em <- emmeans(Season_Binomial, ~Month)
Season_em
Season_em <- emmeans(Season_Binomial, ~Month|Binomial_Habitat)
Season_em <- emmeans(Season_Binomial, ~Month|Habitat_Binomial)
Season_em <- emmeans(Season_Binomial, ~Habitat)
Season_em <- emmeans(Season_Binomial, ~Month)
Season_em
Season_em <- contrast(emmeans(Season_Binomial, ~Month))
Season_em
Season_em <- contrast(emmeans(Season_Binomial, ~Month, method = "tukey", family = "binomial"))
Season_em
Season_tukey <- contrast(Season_em, method = "tukey")
Season_em <- emmeans(Season_Binomial, ~Month)
Season_tukey <-contrast(Season_em, method = "tukey")
Season_tukey
knitr::kable(tidy(Season_tukey), digits=3) %>% kableExtra::kable_styling("striped")
knitr::kable(tidy(Size_Anova), digits=3) %>% kableExtra::kable_styling("striped")
knitr::kable(tidy(Growth_em), digits=3) %>% kableExtra::kable_styling("striped")
summary(Growth_gls)
####Compare the two models####
summary(model6)
####Compare the two models####
growth_table <- summary(model6)
knitr::kable(tidy(growth_table), digits=3) %>% kableExtra::kable_styling("striped")
knitr::kable(growth_table), digits=3) %>% kableExtra::kable_styling("striped")
knitr::kable(growth_table, digits=3) %>% kableExtra::kable_styling("striped")
Growth_tukey <- emmeans::contrast(Growth_em, method = "tukey")
knitr::kable(Growth_tukey, digits=3) %>% kableExtra::kable_styling("striped")
#Logistic Regression for each Habitat
Seagrass <- read_csv("../Data/Seagrass_Tether.csv")
Seagrass$Isopod_Color <- factor(Seagrass$Isopod_Color)
Fucus <- read_csv("../Data/Fucus_Tether.csv")
Fucus$Color <- factor(Fucus$Color)
#Quick look at contingency table with outcomes
xtabs(~`Survivorship Eelgrass` + Isopod_Color, data = Seagrass)
xtabs(~Survivorship + Color, data = Fucus)
#We have count data again so a binomial logistic regression is appropriate.
####Seagrass####
#Test it####
eelgrass_logit <- glm(`Survivorship Eelgrass` ~ Isopod_Color + `Size Eelgrass`, data = Seagrass, family = "binomial")
summary(eelgrass_logit)
Anova(eelgrass_logit)
#Color is significant but size is not.
####Assumptions####
#Simulate residuals to see if the model is working well
EelgrassOutput <- simulateResiduals(fittedModel = eelgrass_logit, n = 250)
plotSimulatedResiduals(EelgrassOutput)
#Goodness-of-fit test:
testUniformity(simulationOutput = EelgrassOutput)
#Test for zero inflation
testZeroInflation(EelgrassOutput)
#Looks good
####Post-Hoc Comparisons####
eelgrass_em <- emmeans(eelgrass_logit, ~Isopod_Color)
eelgrass_tukey <- emmeans::contrast(eelgrass_em,
method = "tukey")
####Fucus####
####Test it####
fucus_logit <- glm(Survivorship ~ Color, data = Fucus,
family = "binomial")
summary(fucus_logit)
Anova(fucus_logit)
####Assumptions####
FucusOutput <- simulateResiduals(fittedModel = fucus_logit, n = 250)
plotSimulatedResiduals(FucusOutput)
#Goodness-of-fit test:
testUniformity(simulationOutput = FucusOutput)
#Test for zero inflation
testZeroInflation(FucusOutput)
#Looks good
####Post Hoc Comparisons####
#Find emmeans and standard error for each interaction
fucus_em <- emmeans(fucus_logit, ~Color)
fucus_tukey <- emmeans::contrast(fucus_em,
method = "tukey")
#Logistic Regression for each Habitat
Seagrass <- read_csv("../Data/Seagrass_Tether.csv")
Seagrass$Isopod_Color <- factor(Seagrass$Isopod_Color)
Fucus <- read_csv("../Data/Fucus_Tether.csv")
Fucus$Color <- factor(Fucus$Color)
#Quick look at contingency table with outcomes
xtabs(~`Survivorship Eelgrass` + Isopod_Color, data = Seagrass)
xtabs(~Survivorship + Color, data = Fucus)
Tether <- read_csv("../Data/Tether.csv") %>%
group_by(Habitat, Color) %>%
mutate(avg = mean(Survivorship)) %>%
mutate(stde = (sd(Survivorship)/sqrt(length(Survivorship))))
tether_sum <- Tether %>%
group_by(Habitat, Color) %>%
summarise(size_surv = (sum(Survivorship/length(Survivorship))),
stde = mean(stde)) %>%
ungroup()
TetherPlot <- ggplot(data = tether_sum,
mapping = aes(x = Color, y = size_surv, fill = Color)) +
geom_col(fill = c("tan4", "chartreuse4", "tan4", "chartreuse4")) +
geom_errorbar(aes(ymin = size_surv - stde, ymax = size_surv + stde),
width = 0.1, color = "gray22") +
facet_wrap(~Habitat) +
ggtitle("Tether Trial") +
labs(x = "Isopod Color",
y = "Proportion Surviving") +
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5)) +
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16))
