size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat), size = 1) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat, fill = c("black", "red")), size = 1) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat, fill = c("black", "red", "black", "red", "black", "red", "black", "red")), size = 1) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat)), size = 1, color = "black", "red") +
scale_color_manual(values = c("tan4", "chartreuse4")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat)), size = 1, color = c("black", "red")) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat)), size = 1) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat), size = 1) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
scale_fill_manual(values = c("black", "red")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat), size = 1) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
scale_color_manual(values = c("black", "red")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
ggplot(data = Size_Final) +
geom_point(mapping = aes(x = Green, y = Areasq1, color = Habitat),
alpha = 0.5) +
geom_line(mapping = aes(x = Green, y = fit, color = Habitat), size = 1) +
scale_color_manual(values = c("tan4", "chartreuse4")) +
geom_ribbon(data = Size_Final, aes(x = Green,
ymin = lwr,
ymax = upr,
group = Habitat),
fill = "lightgrey",
alpha = 0.5) +
facet_grid(rows = "Month") +
ggtitle("Size Influenced by Color and Month")+
labs(x = "Green Value",
y = "Size")+
theme(plot.title = element_text(family = "Times",
color = "#000000",
face = "bold",
size = 20,
hjust = 0.5))+
theme(axis.title = element_text(family = "Times",
color = "#000000",
size = 16)) +
theme_bw()
write_csv(iso_sum, Data, append = FALSE, col_nams = !append)
write_csv(iso_sum, Data, append = FALSE)
write_csv(iso_sum, "Data", append = FALSE)
write_csv(iso_sum, "Artificial_Habitat.csv", append = FALSE)
#Load data, specify NA values
Habitat_Trials <- read_csv("Artificial Habitat Trials.csv", na = "N/A")
#Load data, specify NA values
Habitat_Trials <- read_csv("Artificial Habitat Trials.csv", na = "N/A")
head(Habitat_Trials)
#remove NA values making sure not to drop anything important
iso <- Habitat_Trials %>%
filter(!is.na(Time_Interval)) %>%
filter(!is.na(Location_Color))
#Spread it:
iso_wide <- spread(key = Location, value = Time_Interval, data = iso)
#Convert columns to binary data
#Adding 1 so time 0 doesn't get dropped as a FALSE
#And convert to logical (T/F) and then convert that to numeric (1 for TRUE, 0 for FALSE)
iso_wide$BAFU <- as.integer(as.logical(iso_wide$BAFU + 1))
iso_wide$BASU <- as.integer(as.logical(iso_wide$BASU + 1))
iso_wide$GAFU <- as.integer(as.logical(iso_wide$GAFU + 1))
iso_wide$GASU <- as.integer(as.logical(iso_wide$GASU + 1))
iso_wide$SB <- as.integer(as.logical(iso_wide$SB + 1))
iso_wide$TW <- as.integer(as.logical(iso_wide$TW + 1))
iso_wide$Drain <- as.integer(as.logical(iso_wide$Drain + 1))
iso_wide$SW <- as.integer(as.logical(iso_wide$SW + 1))
iso_sum <- iso_wide %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type) %>%
summarise(BAFU_sum = sum(BAFU, na.rm = T),
BASU_sum = sum(BASU, na.rm = T),
GAFU_sum = sum(GAFU, na.rm = T),
GASU_sum = sum(GASU, na.rm = T),
SW_sum = sum(SW, na.rm = T),
SB_sum = sum(SB, na.rm = T),
TW_sum = sum(TW, na.rm = T),
Drain_sum = sum(Drain, na.rm = T)) %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type, Date_of_Collection, `Area (cmsq)`) %>%
#grab total time for later proportions
mutate(total_time = sum(BAFU_sum, BASU_sum, GAFU_sum, GASU_sum, SW_sum, SB_sum, TW_sum, Drain_sum)) %>%
mutate(BAFU_prop = BAFU_sum/total_time,
BASU_prop = BASU_sum/total_time,
GAFU_prop = GASU_sum/total_time,
GASU_prop = GASU_sum/total_time,
SW_prop = SW_sum/total_time,
SB_prop = SB_sum/total_time,
TW_prop = TW_sum/total_time,
Drain_prop = Drain_sum/total_time)%>%
ungroup()
iso_sum <- iso_wide %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type) %>%
summarise(BAFU_sum = sum(BAFU, na.rm = T),
BASU_sum = sum(BASU, na.rm = T),
GAFU_sum = sum(GAFU, na.rm = T),
GASU_sum = sum(GASU, na.rm = T),
SW_sum = sum(SW, na.rm = T),
SB_sum = sum(SB, na.rm = T),
TW_sum = sum(TW, na.rm = T),
Drain_sum = sum(Drain, na.rm = T)) %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type, `Date_of_Collection`, `Area (cmsq)`) %>%
#grab total time for later proportions
mutate(total_time = sum(BAFU_sum, BASU_sum, GAFU_sum, GASU_sum, SW_sum, SB_sum, TW_sum, Drain_sum)) %>%
mutate(BAFU_prop = BAFU_sum/total_time,
BASU_prop = BASU_sum/total_time,
GAFU_prop = GASU_sum/total_time,
GASU_prop = GASU_sum/total_time,
SW_prop = SW_sum/total_time,
SB_prop = SB_sum/total_time,
TW_prop = TW_sum/total_time,
Drain_prop = Drain_sum/total_time)%>%
ungroup()
#remove NA values making sure not to drop anything important
iso <- Habitat_Trials %>%
filter(!is.na(Time_Interval)) %>%
filter(!is.na(Location_Color))
iso
iso_sum <- iso_wide %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type) %>%
summarise(BAFU_sum = sum(BAFU, na.rm = T),
BASU_sum = sum(BASU, na.rm = T),
GAFU_sum = sum(GAFU, na.rm = T),
GASU_sum = sum(GASU, na.rm = T),
SW_sum = sum(SW, na.rm = T),
SB_sum = sum(SB, na.rm = T),
TW_sum = sum(TW, na.rm = T),
Drain_sum = sum(Drain, na.rm = T)) %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type, `Area (cmsq)`) %>%
#grab total time for later proportions
mutate(total_time = sum(BAFU_sum, BASU_sum, GAFU_sum, GASU_sum, SW_sum, SB_sum, TW_sum, Drain_sum)) %>%
mutate(BAFU_prop = BAFU_sum/total_time,
BASU_prop = BASU_sum/total_time,
GAFU_prop = GASU_sum/total_time,
GASU_prop = GASU_sum/total_time,
SW_prop = SW_sum/total_time,
SB_prop = SB_sum/total_time,
TW_prop = TW_sum/total_time,
Drain_prop = Drain_sum/total_time)%>%
ungroup()
iso_sum <- iso_wide %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type, Date_of_Collection,
`Area (cmsq)`) %>%
summarise(BAFU_sum = sum(BAFU, na.rm = T),
BASU_sum = sum(BASU, na.rm = T),
GAFU_sum = sum(GAFU, na.rm = T),
GASU_sum = sum(GASU, na.rm = T),
SW_sum = sum(SW, na.rm = T),
SB_sum = sum(SB, na.rm = T),
TW_sum = sum(TW, na.rm = T),
Drain_sum = sum(Drain, na.rm = T)) %>%
group_by(Isopod_ID, Field_Habitat, Trial_Type, Date_of_Collection,
`Area (cmsq)`) %>%
#grab total time for later proportions
mutate(total_time = sum(BAFU_sum, BASU_sum, GAFU_sum, GASU_sum, SW_sum, SB_sum, TW_sum, Drain_sum)) %>%
mutate(BAFU_prop = BAFU_sum/total_time,
BASU_prop = BASU_sum/total_time,
GAFU_prop = GASU_sum/total_time,
GASU_prop = GASU_sum/total_time,
SW_prop = SW_sum/total_time,
SB_prop = SB_sum/total_time,
TW_prop = TW_sum/total_time,
Drain_prop = Drain_sum/total_time)%>%
ungroup()
write_csv(iso_sum, "Artificial_Habitat.csv", append = FALSE)
#Load data
Trials <- read_csv("Artificial_Habitat.csv")
View(Trials)
View(Trials)
#Load data
Trials <- read_csv("Artificial_Habitat.csv")
ggplot(Trials,
aes(x = Isopod_Color, y = BAFU_sum, color = Field_Habitat)) +
geom_boxplot()
ggplot(Trials,
aes(x = Isopod_Color, y = BAFU_sum, color = Field_Habitat)) +
geom_col()
ggplot(Trials,
aes(x = Isopod_Color, y = BAFU_sum, color = Field_Habitat)) +
geom_col() +
stat_smooth(method = "lm")
Trial_lm <- lm(BAFU_sum ~ Isopod_Color + Field_Habitat + `Area (cmsq)`, data = Trials)
Trial_lm
pairs(Trial)
#Load data
Trials <- read_csv("Artificial_Habitat.csv")
pairs(Trial)
pairs(Trials)
library(visreg)
with(Trials, cor(cbind(Isopod_Color, Field_Habitat, `Area (cmsq)`)))
vif(Trial_lm)
par(mfrow = c(2,2))
plot(Trial_lm, which = c(1,2,5))
kable_styling(bootstrap_options = "striped", full_width = F, position = "left") %>% column_spec(1, bold = T, border_right = T) %>% column_spec(3, bold=T)
install.packages("kableExtra")
install.packages("kableExtra")
library(kableExtra)
kable_styling(bootstrap_options = "striped", full_width = F, position = "left") %>% column_spec(1, bold = T, border_right = T) %>% column_spec(3, bold=T)
Color_lm %>%
kable_styling(bootstrap_options = "striped",
full_width = F, position = "left") %>%
column_spec(1, bold = T, border_right = T) %>% column_spec(3, bold=T)
Size_Anova <- Anova(Size_lm)
#This data has something up with it. After playing around with it, a log Transformation seems to remedy the issue of a non-normal distribution of residuals and a funky QQ Plot.
#Try taking out point 368.
Survey_no_outlier <- Survey[-368,]
Survey_no_outlier %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
Survey_Final <- Survey_no_outlier %>%
mutate(Month = fct_relevel(Survey_no_outlier$Month,
"May", "June", "July", "August"))
#Test it
Size_lm <- lm(Areasq1 ~ Habitat*Green*Month, data = Survey_Final)
Size_Anova <- Anova(Size_lm)
summary(Size_lm)
Size_Anova %>%
kable_styling(bootstrap_options = "striped",
full_width = F, position = "left") %>%
column_spec(1, bold = T, border_right = T) %>% column_spec(3, bold=T)
Size_Anova <- Anova(Size_lm)
library(tidyverse)
library(car)
library(ggplot2)
library(emmeans)
library(readr)
library(broom)
library(dplyr)
library(lsmeans)
library(nlme)
library(lattice)
library(ggthemes)
library(multcompView)
library(nlme)
library(lmtest)
library(visreg)
library(kableExtra)
Habitat <- read_csv("Field_Survey.csv")
str(Habitat)
head(Habitat)
#The following is the data transformation:
#Restrict isopod size for outliers that were inherently very small or very large (not representative of this sample population with not enough others in similar size range)
Habitat <- Habitat %>%
filter(Area < 1.5) %>%
filter(Area > 0.05)
#Check the data
Habitat %>%
group_by(Habitat, Sex, Month) %>%
tally
#This data has something up with it. After playing around with it, a log Transformation seems to remedy the issue of a non-normal distribution of residuals and a funky QQ Plot.
#Try taking out point 368.
Survey_no_outlier <- Survey[-368,]
#This data has something up with it. After playing around with it, a log Transformation seems to remedy the issue of a non-normal distribution of residuals and a funky QQ Plot.
#Try taking out point 368.
Survey_no_outlier <- Habitat[-368,]
Survey_no_outlier %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
Survey_Final <- Survey_no_outlier %>%
mutate(Month = fct_relevel(Survey_no_outlier$Month,
"May", "June", "July", "August"))
#Test it
Size_lm <- lm(Areasq1 ~ Habitat*Green*Month, data = Survey_Final)
Survey_no_outlier %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
Survey_Final <- Survey_no_outlier %>%
mutate(Month = fct_relevel(Survey_no_outlier$Month,
"May", "June", "July", "August"))
#Test it
Size_lm <- lm(Areasq1 ~ Habitat*Green*Month, data = Survey_Final)
#Test it
Size_lm <- lm(Areasq1 ~ Habitat*Green*Month, data = Survey_Final)
View(Survey_Final)
Survey_no_outlier %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
Survey_no_outlier
View(Survey_no_outlier)
Survey_no_outlier %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
View(Survey_no_outlier)
View(Habitat)
Survey_Final <- Survey_no_outlier %>%
mutate(Month = fct_relevel(Survey_no_outlier$Month,
"May", "June", "July", "August"))
#Test it
Size_lm <- lm(Areasq1 ~ Habitat*Green*Month, data = Survey_Final)
library(tidyverse)
library(car)
library(ggplot2)
library(emmeans)
library(readr)
library(broom)
library(dplyr)
library(lsmeans)
library(nlme)
library(lattice)
library(ggthemes)
library(multcompView)
library(nlme)
library(lmtest)
library(visreg)
library(kableExtra)
Survey <- read_csv("Field_Survey.csv")
str(Survey)
head(Survey)
#The following is the data transformation:
#Restrict isopod size for outliers that were inherently very small or very large (not representative of this sample population with not enough others in similar size range)
Survey <- Survey %>%
filter(Area < 1.5) %>%
filter(Area > 0.05)
#Check the data
Survey %>%
group_by(Habitat, Sex, Month) %>%
tally
#This data has something up with it. After playing around with it, a log Transformation seems to remedy the issue of a non-normal distribution of residuals and a funky QQ Plot.
#Try taking out point 368.
Survey_no_outlier <- Survey[-368,]
Survey_no_outlier %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
View(Survey_no_outlier)
Survey_Final <- Survey_no_outlier %>%
mutate(Month = fct_relevel(Survey_no_outlier$Month,
"May", "June", "July", "August"))
Survey_Final %>%
mutate(Areasq1 = (1/(sqrt(Area)))) %>%
mutate(lnArea = log(Area))
View(Survey_Final)
